{"version":3,"sources":["User/User.module.css","MyRoom/MyRoom.module.css","NavBar/NavBar.module.css","Sidebar/sideBar.module.css","AddComment/Comment.module.css","AddPost/post.module.css","Dashboard/Dashboard.module.css","SinglePage/S_Page.module.css","Dashboard/Post.module.css","SinglePage/Comment.module.css","SinglePage/SinglePageCon.module.css","Input/InputR.module.css","Dashboard/SearchBar.module.css","NotFound/NotFound.module.css","Textarea/TextareaR.module.css","AppLoader/spinner.gif","utilities/setAuthorizationToken.js","utilities/Api.js","actions/pageActions.js","reducers/page.js","actions/userActions.js","reducers/user.js","actions/searchActions.js","reducers/search.js","actions/userPotsActions.js","reducers/userPosts.js","actions/userCommentsActions.js","reducers/userComments.js","actions/singlePageActions.js","reducers/singlePage.js","reducers/index.js","store/configureStore.js","Input/InputR.js","Dashboard/SearchBar.js","Dashboard/Post.js","AppLoader/AppLoader.js","Dashboard/Dashboard.js","Dashboard/DashboardContainer.js","Search/searchPage.js","utilities/FieldLevelValidationForm.js","User/user.js","User/Modal.js","User/logout.js","utilities/apiUser.js","User/UserContainer.js","NotFound/NotFound.js","SinglePage/S_Page.js","SinglePage/Comment.js","Textarea/TextareaR.js","AddComment/AddCommentForm.js","AddComment/AddCommentContainer.js","SinglePage/SinglePageCon.js","User/RegistrationForm.js","User/RegistrationContainer.js","AddPost/AddPostForm.js","AddPost/AddPostContainer.js","MyRoom/userPost.js","MyRoom/MyRoomPosts.js","MyRoom/userComment.js","MyRoom/MyRoomComments.js","UpdatePost/updatePost.js","UpdateComment/UpdateCommentForm.js","UpdateComment/updateComment.js","MyRoom/MyRoomRoutes.js","Sidebar/sideBar.js","MyRoom/MyRoom.js","containers/AuthenticatedComponent/index.js","route/routes.js","NavBar/Nav.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","modal","close","form","container","my_table","my_head","list","list__item","header","sidenav","sidelink","dashboard","postCont","loadMore","post","author","post_text","Post","_link","article","comments","Input","searchForm","styles","__webpack_require__","p","setAuthorizationToken","token","Headers","Content-type","Authorization","concat","_request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","fetchData","res","error","wrap","_context","prev","next","fetch","sent","ok","assign","status","statusText","abrupt","Promise","reject","json","stop","this","_x","_x2","apply","arguments","AllPosts","fetchPosts","start","SearchPosts","search","PostById","fetchPost","id","all","AddPost","data","method","body","headers","AddComments","fetchComment","GetUserPosts","GetUserComments","RemoveUserPost","_id","RemoveUserComment","UpdatePost","UpdateComment","FETCH_ALL_ITEMS","FETCH_ALL_ITEMS_SUCCESS","FETCH_ALL_ITEMS_ERROR","getPosts","dispatch","type","Api","then","items","arr","payload","PushItems","receivePosts","catch","errors","ItemsMapping","map","item","name","title","description","receivedAt","createdAt","slice","createdBy","length","posts","showLoadButton","initialSate","isFetching","LOGIN_SUCCESS","LOGOUT_SUCCESS","login","isLogged","logout","FETCH_SEARCH_ITEMS","FETCH_SEARCH_ITEMS_SUCCESS","FETCH_SEARCH_ITEMS_ERROR","RESET_STATE","getSearch","UniquePosts","oldArray","newArray","myArray","unique","filter","findIndex","x","push","FETCH_USER_POSTS","FETCH_USER_POSTS_SUCCESS","FETCH_USER_POSTS_ERROR","userPosts","FETCH_USER_COMMENTS","FETCH_USER_COMMENTS_SUCCESS","FETCH_USER_COMMENTS_ERROR","getComments","comment","userComments","FETCH_COMMENTS_BY_ID","FETCH_COMMENTS_BY_ID_SUCCESS","FETCH_COMMENTS_BY_ID_ERROR","getPostComments","_ref2","slicedToArray","payload2","rootReducer","combineReducers","page","state","undefined","action","objectSpread","toConsumableArray","user","postById","middlewares","thunk","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","configureStore","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","input","label","meta","react_default","createElement","className","CSS","placeholder","touched","SearchBar","props","react_final_form_es","onSubmit","render","handleSubmit","submitting","pristine","css","disabled","_props$data","Link","to","AppLoader","src","require","alt","height","Dashboard","d","src_AppLoader_AppLoader","Dashboard_Post","renderPosts","isVisible","onClick","href","enhance","lifecycle","componentDidMount","_componentDidMount","getPostsActions","compose","connect","getState","shouldFetchPost","fetchIsNeed","Dashboard_SearchBar","e","history","pathname","Search","src_Dashboard_Dashboard","resetStateAction","match","params","getSearchActions","required","value","maxLength","max","maxLength200","minLength","min","minLength6","minLength2","minLength20","email","test","composeValidations","_len","validations","Array","_key","reduce","validator","User","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","s","handleClose","reset","submitError","validate","V","React","Component","modalRoot","document","getElementById","Modal","_this","call","el","appendChild","removeChild","ReactDOM","createPortal","children","Logout","handleLogout","ERRORS","AddUser","Login","LogOut","actions","bindActionCreators","userActions","_handleSubmit","_callee2","event","from","_context2","location","JSON","stringify","password","t0","defineProperty","FORM_ERROR","replace","preventDefault","handleError","_x3","err","User_Modal","user_User","User_logout","withRouter","Page","newDate","Comment","Textarea","AddCommentForm","submitSucceeded","_submitComment","postId","AddComment_AddCommentForm","getPostById","dataById","index","_props$dataById2","src_NotFound_NotFound","S_Page","_props$dataById","SinglePage_Comment","renderComments","AddComment_AddCommentContainer","AddUserForm","_submitRegistration","RegistrationForm","AddPostForm","initialValues","values","_submitForm","AddPost_AddPostForm","UserPost","handleRemove","NavLink","MyRoomPosts","RenderPosts","userPost","bind","assertThisInitialized","getUserPosts","_this$props$userPosts","style","UserComment","MyRoomComments","userComment","getUserComments","_this$props$userComme","submitForm","find","element","setState","UpdateCommentForm","UpdateComment_UpdateCommentForm","MyRoomRoutes","Switch","Redirect","exact","Route","path","component","AddPostContainer","SideBar","MyRoom","Fragment","sideBar","MyRoom_MyRoomRoutes","requireAuthentication","AuthenticatedComponent","es_Redirect","Routes","DashboardContainer","UserContainer","AddUserContainer","SinglePagePost","SearchContainer","NotFound","App","Nav","routes","Boolean","window","hostname","es","integration_react","loading","BrowserRouter","containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05bd86fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"User_modal__3tf-6\",\"close\":\"User_close__2kDzZ\",\"form\":\"User_form__Cvrgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyRoom_container__3G26N\",\"my_table\":\"MyRoom_my_table__6Mtfq\",\"my_head\":\"MyRoom_my_head__bYx1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"NavBar_list__ZcGdd\",\"list__item\":\"NavBar_list__item__3RjTi\",\"header\":\"NavBar_header__1OKgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"sideBar_sidenav__2Yc2t\",\"sidelink\":\"sideBar_sidelink__23TOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Comment_form__6RGIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"post_form__yiIOP\",\"container\":\"post_container__2Lv68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__32kja\",\"postCont\":\"Dashboard_postCont__1BYA_\",\"loadMore\":\"Dashboard_loadMore__2DfN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"S_Page_post__3eDr1\",\"author\":\"S_Page_author__19DfC\",\"post_text\":\"S_Page_post_text__2SVuj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__DM03s\",\"_link\":\"Post__link__1NMPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Comment_article__1rPAQ\",\"author\":\"Comment_author__2tL_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SinglePageCon_container__3pdaZ\",\"comments\":\"SinglePageCon_comments__2akIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"InputR_Input__Rawfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchBar_searchForm__3D_Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styles\":\"NotFound_styles__WsA4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"TextareaR_Input__2_M4y\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.d4f3e818.gif\";","export default function setAuthorizationToken(token) {\r\n  let myHeader = {};\r\n  if (token) {\r\n    myHeader = new Headers({\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n  } else {\r\n    myHeader = new Headers({\r\n      \"Content-type\": \"application/json; charset=UTF-8\"\r\n    });\r\n  }\r\n  return myHeader;\r\n}\r\n","import setAuthorizationToken from \"./setAuthorizationToken\";\r\n\r\nconst BASE_URL = \"/api/\";\r\n\r\nconst _request = async (url, fetchData) => {\r\n  const res = await fetch(`${BASE_URL}${url}`, fetchData);\r\n  if (!res.ok) {\r\n    const error = Object.assign(\r\n      {},\r\n      {\r\n        status: res.status,\r\n        statusText: res.statusText\r\n      }\r\n    );\r\n\r\n    return Promise.reject(error);\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const AllPosts = {\r\n  fetchPosts(start) {\r\n    return _request(`posts/?skip=${start}&limit=50`);\r\n  }\r\n};\r\nexport const SearchPosts = {\r\n  fetchPosts(start, search) {\r\n    return _request(`posts/?skip=${start}&limit=50&search=${search}`);\r\n  }\r\n};\r\n\r\nexport const PostById = {\r\n  fetchPost(id) {\r\n    return Promise.all([\r\n      _request(`posts/${id}`),\r\n      _request(`comments/?postId=${id}`)\r\n    ]);\r\n  }\r\n};\r\nexport const AddPost = {\r\n  fetchPost(data, token) {\r\n    let fetchData = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: setAuthorizationToken(token)\r\n    };\r\n    return _request(\"posts\", fetchData);\r\n  }\r\n};\r\n\r\nexport const AddComments = {\r\n  fetchComment(data, token) {\r\n    let fetchData = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: setAuthorizationToken(token)\r\n    };\r\n    return _request(\"comments\", fetchData);\r\n  }\r\n};\r\nexport const GetUserPosts = {\r\n  fetchPost(token) {\r\n    let fetchData = {\r\n      method: \"GET\",\r\n      headers: setAuthorizationToken(token)\r\n    };\r\n    return _request(\"posts/userposts\", fetchData);\r\n  }\r\n};\r\nexport const GetUserComments = {\r\n  fetchPost(token) {\r\n    let fetchData = {\r\n      method: \"GET\",\r\n      headers: setAuthorizationToken(token)\r\n    };\r\n    return _request(\"comments/usercomments\", fetchData);\r\n  }\r\n};\r\nexport const RemoveUserPost = {\r\n  fetchPost(_id) {\r\n    let fetchData = {\r\n      method: \"DELETE\"\r\n    };\r\n    return _request(`posts/${_id}`, fetchData);\r\n  }\r\n};\r\nexport const RemoveUserComment = {\r\n  fetchPost(_id) {\r\n    let fetchData = {\r\n      method: \"DELETE\"\r\n    };\r\n    return _request(`comments/${_id}`, fetchData);\r\n  }\r\n};\r\nexport const UpdatePost = {\r\n  fetchPost(id, data, token) {\r\n    let fetchData = {\r\n      method: \"PATCH\",\r\n      body: data,\r\n      headers: setAuthorizationToken(token)\r\n    };\r\n    return _request(`posts/${id}`, fetchData);\r\n  }\r\n};\r\nexport const UpdateComment = {\r\n  fetchPost(id, data, token) {\r\n    let fetchData = {\r\n      method: \"PATCH\",\r\n      body: data,\r\n      headers: setAuthorizationToken(token)\r\n    };\r\n    return _request(`comments/${id}`, fetchData);\r\n  }\r\n};\r\n","import * as Api from \"../utilities/Api\";\r\n\r\nexport const FETCH_ALL_ITEMS = \"FETCH_ALL_ITEMS\";\r\nexport const FETCH_ALL_ITEMS_SUCCESS = \"FETCH_ALL_ITEMS_SUCCESS\";\r\nexport const FETCH_ALL_ITEMS_ERROR = \"FETCH_ALL_ITEMS_ERROR\";\r\n\r\nexport function getPosts(start) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_ALL_ITEMS\r\n    });\r\n\r\n    Api.AllPosts.fetchPosts(start)\r\n      .then(items => dispatch(receivePosts(items)))\r\n      .catch(errors =>\r\n        dispatch({ type: FETCH_ALL_ITEMS_ERROR, errors: errors })\r\n      );\r\n  };\r\n}\r\n\r\nexport function receivePosts(items) {\r\n  const arr = items.post;\r\n  return {\r\n    type: FETCH_ALL_ITEMS_SUCCESS,\r\n    payload: PushItems(arr)\r\n  };\r\n}\r\nfunction ItemsMapping(items) {\r\n  const posts = items.map(item => ({\r\n    id: item._id,\r\n    name: item.name,\r\n    title: item.title,\r\n    body: item.description,\r\n    receivedAt: item.createdAt.slice(0, 10),\r\n    createdBy: item.createdBy\r\n  }));\r\n  return posts;\r\n}\r\nfunction PushItems(items) {\r\n  if (items.length === 50) {\r\n    return {\r\n      posts: ItemsMapping(items),\r\n      showLoadButton: true\r\n    };\r\n  }\r\n  if (items.length < 50) {\r\n    return {\r\n      posts: ItemsMapping(items),\r\n      showLoadButton: false\r\n    };\r\n  }\r\n}\r\n\r\nfunction shouldFetchPost(state, start) {\r\n  const posts = state.page.posts;\r\n  if (posts.length === 0) {\r\n    return true;\r\n  } else if (posts.length <= start) {\r\n    return true;\r\n  } else if (posts.isFetching) {\r\n    return false;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport function fetchIsNeed(start) {\r\n  return (dispatch, getState) => {\r\n    if (shouldFetchPost(getState(), start)) {\r\n      return dispatch(getPosts(start));\r\n    }\r\n  };\r\n}\r\n","import {\r\n  FETCH_ALL_ITEMS,\r\n  FETCH_ALL_ITEMS_SUCCESS,\r\n  FETCH_ALL_ITEMS_ERROR\r\n} from \"../actions/pageActions\";\r\n\r\nexport const initialSate = {\r\n  posts: [],\r\n  isFetching: false,\r\n  showLoadButton: true,\r\n  errors: \"\"\r\n};\r\nexport function postsReducer(state = initialSate, action) {\r\n  switch (action.type) {\r\n    case FETCH_ALL_ITEMS:\r\n      return { ...state, isFetching: true, showLoadButton: true, errors: \"\" };\r\n    case FETCH_ALL_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, ...action.payload.posts],\r\n        showLoadButton: action.payload.showLoadButton,\r\n        isFetching: false,\r\n        errors: \"\"\r\n      };\r\n    case FETCH_ALL_ITEMS_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function UniquePosts(oldArray, newArray) {\r\n//   let myArray = oldArray.concat(newArray);\r\n//   let unique = [];\r\n//   myArray.filter(function(item){\r\n//     let i = unique.findIndex(x => x.id === item.id);\r\n//     if(i <= -1){\r\n//       unique.push(item);\r\n//     }\r\n//     return null;\r\n//   }); \r\n//   return unique;\r\n// }\r\n","\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\n\r\nexport function login(data) {\r\n  return {\r\n      type: LOGIN_SUCCESS,\r\n      payload: {\r\n        name: data.name,\r\n        token: data.token,\r\n        isLogged: true,\r\n      }\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n}\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n} from \"../actions/userActions\";\r\n\r\nexport const initialSate = {\r\n  name: \"Guest\",\r\n  isLogged: false,\r\n  token: null,\r\n  error: \"\"\r\n};\r\nexport function userReducer(state = initialSate, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        name: action.payload.name,\r\n        isLogged: action.payload.isLogged,\r\n        token: action.payload.token,\r\n        error: \"\"\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return { ...state, isLogged: false, name:'Guest',token: null, error: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as Api from \"../utilities/Api\";\r\n\r\nexport const FETCH_SEARCH_ITEMS = \"FETCH_SEARCH_ITEMS\";\r\nexport const FETCH_SEARCH_ITEMS_SUCCESS = \"FETCH_SEARCH_ITEMS_SUCCESS\";\r\nexport const FETCH_SEARCH_ITEMS_ERROR = \"FETCH_SEARCH_ITEMS_ERROR\";\r\nexport const RESET_STATE = \"RESET_STATE\";\r\n\r\nexport function getSearch(start, search) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_SEARCH_ITEMS\r\n    });\r\n\r\n    Api.SearchPosts.fetchPosts(start, search)\r\n      .then(items => dispatch(receivePosts(items)))\r\n      .catch(errors =>\r\n        dispatch({ type: FETCH_SEARCH_ITEMS_ERROR, errors: errors })\r\n      );\r\n  };\r\n}\r\nexport function resetState () {\r\n  return{\r\n    type: RESET_STATE,\r\n  }\r\n}\r\nexport function receivePosts(items) {\r\n  const arr = items.post;\r\n  return {\r\n    type: FETCH_SEARCH_ITEMS_SUCCESS,\r\n    payload: PushItems(arr)\r\n  };\r\n}\r\nfunction ItemsMapping(items) {\r\n  const posts = items.map(item => ({\r\n    id: item._id,\r\n    name: item.name,\r\n    title: item.title,\r\n    body: item.description,\r\n    receivedAt: item.createdAt.slice(0, 10),\r\n    createdBy: item.createdBy\r\n  }));\r\n  return posts;\r\n}\r\nfunction PushItems(items) {\r\n  if (items.length === 50 ) {\r\n    return {\r\n      posts: ItemsMapping(items),\r\n      showLoadButton: true\r\n    };\r\n  }\r\n  if (items.length < 50 ) {\r\n    return {\r\n      posts: ItemsMapping(items),\r\n      showLoadButton: false\r\n    };\r\n  }\r\n}\r\n","import {\r\n  FETCH_SEARCH_ITEMS,\r\n  FETCH_SEARCH_ITEMS_SUCCESS,\r\n  FETCH_SEARCH_ITEMS_ERROR,\r\n  RESET_STATE\r\n} from \"../actions/searchActions\";\r\n\r\nexport const initialSate = {\r\n  posts: [],\r\n  isFetching: false,\r\n  showLoadButton: true,\r\n  errors: \"\"\r\n};\r\nexport function searchReducer(state = initialSate, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_ITEMS:\r\n      return { ...state, isFetching: true, showLoadButton: true, errors: \"\" };\r\n    case FETCH_SEARCH_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: UniquePosts(state.posts, action.payload.posts),\r\n        showLoadButton: action.payload.showLoadButton,\r\n        isFetching: false,\r\n        errors: \"\"\r\n      };\r\n    case FETCH_SEARCH_ITEMS_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n      case RESET_STATE:\r\n      return{...state, posts: [], isFetching: true, showLoadButton: true, errors: \"\"};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction UniquePosts(oldArray, newArray) {\r\n  let myArray = oldArray.concat(newArray);\r\n  let unique = [];\r\n  myArray.filter(function(item) {\r\n    let i = unique.findIndex(x => x.id === item.id);\r\n    if (i <= -1) {\r\n      unique.push(item);\r\n    }\r\n    return null;\r\n  });\r\n  return unique;\r\n}\r\n","import * as Api from \"../utilities/Api\";\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\";\r\nexport const FETCH_USER_POSTS_SUCCESS = \"FETCH_USER_POSTS_SUCCESS\";\r\nexport const FETCH_USER_POSTS_ERROR = \"FETCH_USER_POSTS_ERROR\";\r\n\r\n\r\nexport function getPosts(token) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_USER_POSTS\r\n    });\r\n\r\n    Api.GetUserPosts.fetchPost(token)\r\n      .then(items => dispatch(receivePosts(items)))\r\n      .catch(errors =>\r\n        dispatch({ type: FETCH_USER_POSTS_ERROR, errors: errors })\r\n      );\r\n  };\r\n}\r\n\r\nfunction receivePosts(items) {\r\n  const arr = items.post;\r\n\r\n  return {\r\n    type: FETCH_USER_POSTS_SUCCESS,\r\n    payload: ItemsMapping(arr)\r\n  };\r\n}\r\n\r\n\r\nfunction ItemsMapping(items) {\r\n  const posts = items.map(item => ({\r\n    id: item._id,\r\n    name: item.name,\r\n    title: item.title,\r\n    body: item.description,\r\n    receivedAt: item.createdAt.slice(0, 10),\r\n    createdBy: item.createdBy\r\n  }));\r\n  return posts;\r\n}\r\nfunction shouldFetchPost(state) {\r\n  const {isFetching} = state.userPosts;\r\n  if (isFetching) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\nexport function fetchIsNeed(token) {\r\n  return (dispatch, getState) => {\r\n    if (shouldFetchPost(getState())) {\r\n      return dispatch(getPosts(token));\r\n    }\r\n  };\r\n}\r\n\r\n","import {\r\n  FETCH_USER_POSTS,\r\n  FETCH_USER_POSTS_SUCCESS,\r\n  FETCH_USER_POSTS_ERROR,\r\n} from \"../actions/userPotsActions\";\r\nimport {LOGOUT_SUCCESS} from '../actions/userActions'\r\n\r\nexport const initialSate = {\r\n  userPosts: [],\r\n  isFetching: false,\r\n  errors: \"\"\r\n};\r\nexport function userPostsReducer(state = initialSate, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_POSTS:\r\n      return { ...state, isFetching: true, errors: \"\" };\r\n    case FETCH_USER_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload,\r\n        isFetching: false,\r\n        errors: \"\"\r\n      };\r\n    case FETCH_USER_POSTS_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n    case LOGOUT_SUCCESS:\r\n      return { ...state, userPosts: [], isFetching: false, errors: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as Api from \"../utilities/Api\";\r\n\r\nexport const FETCH_USER_COMMENTS = \"FETCH_USER_COMMENTS\";\r\nexport const FETCH_USER_COMMENTS_SUCCESS = \"FETCH_USER_COMMENTS_SUCCESS\";\r\nexport const FETCH_USER_COMMENTS_ERROR = \"FETCH_USER_COMMENTS_ERROR\";\r\n\r\nexport function getComments(token) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_USER_COMMENTS\r\n    });\r\n\r\n    Api.GetUserComments.fetchPost(token)\r\n      .then(items => dispatch(receivePosts(items)))\r\n      .catch(errors =>\r\n        dispatch({ type: FETCH_USER_COMMENTS_ERROR, errors: errors })\r\n      );\r\n  };\r\n}\r\n\r\nexport function receivePosts(items) {\r\n  const arr = items.comment; //comment\r\n\r\n  return {\r\n    type: FETCH_USER_COMMENTS_SUCCESS,\r\n    payload: arr\r\n  };\r\n}\r\nfunction shouldFetchPost(state) {\r\n  const { isFetching } = state.userComments;\r\n  if (isFetching) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\nexport function fetchIsNeed(token) {\r\n  return (dispatch, getState) => {\r\n    if (shouldFetchPost(getState())) {\r\n      return dispatch(getComments(token));\r\n    }\r\n  };\r\n}\r\n","import {\r\n  FETCH_USER_COMMENTS,\r\n  FETCH_USER_COMMENTS_SUCCESS,\r\n  FETCH_USER_COMMENTS_ERROR\r\n} from \"../actions/userCommentsActions\";\r\nimport { LOGOUT_SUCCESS } from \"../actions/userActions\";\r\n\r\nexport const initialSate = {\r\n  userComments: [],\r\n  isFetching: false,\r\n  errors: \"\"\r\n};\r\nexport function userCommentsReducer(state = initialSate, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_COMMENTS:\r\n      return { ...state, isFetching: true, errors: \"\" };\r\n    case FETCH_USER_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userComments: action.payload,\r\n        isFetching: false,\r\n        errors: \"\"\r\n      };\r\n    case FETCH_USER_COMMENTS_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n    case LOGOUT_SUCCESS:\r\n      return { ...state, userComments: [], isFetching: false, errors: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as Api from \"../utilities/Api\";\r\nexport const FETCH_COMMENTS_BY_ID = \"FETCH_COMMENTS_BY_ID\";\r\nexport const FETCH_COMMENTS_BY_ID_SUCCESS = \"FETCH_COMMENTS_BY_ID_SUCCESS\";\r\nexport const FETCH_COMMENTS_BY_ID_ERROR = \"FETCH_COMMENTS_BY_ID_ERROR\";\r\n\r\nexport function getPostComments(id) {\r\n  \r\n  return dispatch => {\r\n    dispatch({ type: FETCH_COMMENTS_BY_ID });\r\n    Api.PostById.fetchPost(id)\r\n      .then(([item, comments]) =>\r\n        dispatch(receivePosts(item.post, comments.comment))\r\n      )\r\n      .catch(errors =>\r\n        dispatch({ type: FETCH_COMMENTS_BY_ID_ERROR, errors: errors })\r\n      );\r\n  };\r\n}\r\n\r\nexport function receivePosts(item, comments) {\r\n  return {\r\n    type: FETCH_COMMENTS_BY_ID_SUCCESS,\r\n    payload: item,\r\n    payload2: comments\r\n  };\r\n}\r\n","import {\r\n  FETCH_COMMENTS_BY_ID,\r\n  FETCH_COMMENTS_BY_ID_SUCCESS,\r\n  FETCH_COMMENTS_BY_ID_ERROR\r\n} from \"../actions/singlePageActions\";\r\n\r\nexport const initialSate = {\r\n  post: {},\r\n  comments: [],\r\n  isFetching: false,\r\n  errors: \"\"\r\n};\r\nexport function commentsReducer(state = initialSate, action) {\r\n  switch (action.type) {\r\n    case FETCH_COMMENTS_BY_ID:\r\n      return { ...state, isFetching: true, errors: \"\" };\r\n    case FETCH_COMMENTS_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload2,\r\n        post: action.payload,\r\n        isFetching: false,\r\n      };\r\n    case FETCH_COMMENTS_BY_ID_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { postsReducer } from \"./page\";\r\nimport { userReducer } from \"./user\";\r\nimport { searchReducer } from \"./search\";\r\nimport { userPostsReducer } from \"./userPosts\";\r\nimport { userCommentsReducer } from \"./userComments\";\r\n\r\nimport { commentsReducer } from \"./singlePage\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  page: postsReducer,\r\n  user: userReducer,\r\n  postById: commentsReducer,\r\n  search: searchReducer,\r\n  userPosts: userPostsReducer,\r\n  userComments: userCommentsReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport hardSet from \"redux-persist/lib/stateReconciler/hardSet\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"user\"]\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n  );\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\nexport default configureStore;\r\n","import React from \"react\";\r\nimport CSS from \"./InputR.module.css\";\r\n\r\nexport const Input = ({ input, label, meta }) => (\r\n  <div className={CSS.Input}>\r\n    <label>{label}</label>\r\n    <input {...input} type=\"text\" placeholder={input.name} />\r\n    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Input } from \"../Input/InputR\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport css from \"./SearchBar.module.css\";\r\n\r\nconst SearchBar = props => {\r\n  return (\r\n    <Form\r\n      onSubmit={props.onSubmit}\r\n      render={({ handleSubmit, submitting, pristine }) => (\r\n        <form className={css.searchForm} onSubmit={handleSubmit}>\r\n          <Field name=\"Search\" placeholder=\"Search for...\">\r\n            {Input}\r\n          </Field>\r\n          <button type=\"submit\" disabled={submitting}>\r\n            Search\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport p from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  const { id, name, title, receivedAt } = props.data;\r\n\r\n  return (\r\n    <div className={p.Post}>\r\n      <h3>\r\n        <i>Name: </i> {name}\r\n      </h3>\r\n      <Link className={p._link} to={`/${id}`}>\r\n        {title}\r\n      </Link>\r\n\r\n      <p>{receivedAt}</p>\r\n    </div>\r\n  );\r\n};\r\nPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    receivedAt: PropTypes.string.isRequired\r\n  })\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst AppLoader = () => (\r\n  <img src={require(\"./spinner.gif\")} alt=\"Loading...\" height=\"100\" />\r\n);\r\nexport default AppLoader;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport AppLoader from \"../AppLoader/AppLoader\";\r\nimport PropTypes from \"prop-types\";\r\nimport d from \"./Dashboard.module.css\";\r\n\r\nconst Dashboard = props => {\r\n  const renderPosts = () => {\r\n    const { data, isFetching, error } = props;\r\n    if (error) {\r\n      return <p className=\"error\">An error occurred while loading!</p>;\r\n    }\r\n    if (isFetching) {\r\n      return <AppLoader />;\r\n    }\r\n    let newsTemplate = null;\r\n    if (data.length) {\r\n      newsTemplate = data.map(function(item) {\r\n        return <Post key={item.id} data={item} />;\r\n      });\r\n    } else {\r\n      newsTemplate = <p>Unfortunately there are no posts ...</p>;\r\n    }\r\n    return newsTemplate;\r\n  };\r\n\r\n  return (\r\n    <div className={d.dashboard}>\r\n      <div className={d.postCont}>{renderPosts()}</div>\r\n      <div>\r\n        {props.isVisible && (\r\n          <button\r\n            className={d.loadMore}\r\n            onClick={props.loadMore}\r\n            href=\"#readmore\"\r\n          >\r\n            Load more...\r\n          </button>\r\n        )}{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nDashboard.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  isVisible: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchIsNeed } from \"../actions/pageActions\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { lifecycle, compose } from \"recompose\";\r\n\r\nconst DashboardContainer = props => {\r\n  const submitSearch = e => {\r\n    props.history.push({ pathname: `/search/${e.Search}` });\r\n  };\r\n\r\n  const loadMore = () => {\r\n    const { posts } = props.page;\r\n    let start = posts.length;\r\n    props.getPostsActions(start);\r\n  };\r\n  const { posts } = props.page;\r\n  const { page } = props;\r\n  return (\r\n    <div>\r\n      <h1 className=\"App\">Notice board</h1>\r\n      <SearchBar onSubmit={submitSearch} />\r\n      <Dashboard\r\n        data={posts}\r\n        isFetching={page.isFetching}\r\n        error={page.errors}\r\n        loadMore={loadMore}\r\n        isVisible={page.showLoadButton}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = store => {\r\n  return {\r\n    page: store.page\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPostsActions: start => {\r\n      dispatch(fetchIsNeed(start));\r\n    }\r\n  };\r\n};\r\nexport const enhance = lifecycle({\r\n  async componentDidMount() {\r\n    let start = 0;\r\n    await this.props.getPostsActions(start);\r\n  }\r\n});\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  enhance\r\n)(DashboardContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {getSearch} from '../actions/searchActions';\r\nimport {resetState} from '../actions/searchActions';\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport { lifecycle, compose } from \"recompose\";\r\n\r\n\r\nconst SearchContainer = props => {\r\n\r\n  const loadMore = () => {\r\n    const { posts } = props.search;\r\n    let start = posts.length;\r\n    let search = props.match.params.search;\r\n    props.getSearchActions(start, search);\r\n  };\r\n  const { posts } = props.search;\r\n  const { search } = props;\r\n  return (\r\n    <div>\r\n      <h1 className=\"App\">Search Result:</h1>\r\n      <Dashboard\r\n        data={posts}\r\n        isFetching={search.isFetching}\r\n        error={search.errors}\r\n        loadMore={loadMore}\r\n        isVisible={search.showLoadButton}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = store => {\r\n  return {\r\n    search: store.search\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSearchActions: (start, search) =>{\r\n      dispatch(getSearch(start, search))\r\n    }, \r\n    resetStateAction:() =>{\r\n      dispatch(resetState())\r\n    }\r\n  };\r\n};\r\n\r\nexport const enhance = lifecycle({\r\n  async componentDidMount() {\r\n    await this.props.resetStateAction();\r\n    let start = 0;\r\n    let search = this.props.match.params.search;\r\n    await this.props.getSearchActions(start, search);\r\n  }\r\n});\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ), enhance)(SearchContainer);","export const required = value =>\r\n  value || typeof value === \"number\" ? undefined : \"Required\";\r\n\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength15 = maxLength(15);\r\nexport const maxLength200 = maxLength(200);\r\nconst minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\nexport const minLength6 = minLength(6);\r\nexport const minLength2 = minLength(2);\r\nexport const minLength20 = minLength(20);\r\nexport const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? \"Invalid email address\"\r\n    : undefined;\r\nexport const alphaNumeric = value =>\r\n  value && /[^a-zA-Z0-9 ]/i.test(value)\r\n    ? \"Only alphanumeric characters\"\r\n    : undefined;\r\n\r\nexport const composeValidations = (...validations) => value =>\r\n  validations.reduce(\r\n    (error, validator) => error || validator(value),\r\n    undefined\r\n  );\r\n","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport * as V from \"../utilities/FieldLevelValidationForm\";\r\nimport { Input } from \"../Input/InputR\";\r\n\r\nexport class User extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={s.modal}>\r\n        <button className={s.close} onClick={this.props.handleClose}>\r\n          X\r\n        </button>\r\n        <p>Hello !</p>\r\n        <p>Please enter your e-mail and password!</p>\r\n\r\n        <Form\r\n          onSubmit={this.props.handleSubmit}\r\n          render={({\r\n            handleSubmit,\r\n            reset,\r\n            submitting,\r\n            pristine,\r\n            submitError\r\n          }) => (\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n              <Field\r\n                name=\"email\"\r\n                validate={V.composeValidations(V.email, V.required)}\r\n              >\r\n                {Input}\r\n              </Field>\r\n              <Field\r\n                name=\"password\"\r\n                validate={V.composeValidations(V.required, V.minLength6)}\r\n              >\r\n                {Input}\r\n              </Field>\r\n              <div>\r\n                <button type=\"submit\" disabled={submitting}>\r\n                  Submit\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={reset}\r\n                  disabled={submitting || pristine}\r\n                >\r\n                  Reset\r\n                </button>\r\n                {submitError && <div>{submitError}</div>}\r\n              </div>\r\n            </form>\r\n          )}\r\n        />\r\n        <Link to=\"/registration\">Sign up...</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.el = document.createElement('div');\r\n    }\r\n  \r\n    componentDidMount() {\r\n      \r\n      modalRoot.appendChild(this.el);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      modalRoot.removeChild(this.el);\r\n    }\r\n  \r\n    render() {\r\n      return ReactDOM.createPortal(\r\n        this.props.children,\r\n        this.el,\r\n      );\r\n    }\r\n  }\r\n  export default Modal\r\n  ","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\n\r\nexport class Logout extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={s.modal}>\r\n        <button className={s.close} onClick={this.props.handleClose}>\r\n          X\r\n        </button>\r\n        <p>Go out?</p>\r\n        <button onClick={this.props.handleLogout}>Exit</button>\r\n        <div> {this.props.ERRORS.error && \"Server Error\"}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Logout;\r\n","import setAuthorizationToken from \"./setAuthorizationToken\";\r\nconst BASE_URL = \"api/users\";\r\n\r\nconst _request = async (url, fetchData) => {\r\n  const res = await fetch(`${BASE_URL}${url}`, fetchData);\r\n  if (!res.ok) {\r\n    const error = Object.assign(\r\n      {},\r\n      {\r\n        status: res.status,\r\n        statusText: res.statusText\r\n      }\r\n    );\r\n    return Promise.reject(error);\r\n  }\r\n  return res.json();\r\n};\r\nexport const AddUser = {\r\n  fetchPost(data) {\r\n    let fetchData = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: setAuthorizationToken()\r\n    };\r\n    return _request(\"/sign-up\", fetchData);\r\n  }\r\n};\r\nexport const Login = {\r\n  fetchPost(data) {\r\n    let fetchData = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: setAuthorizationToken()\r\n    };\r\n    return _request(\"/sign-in\", fetchData);\r\n  }\r\n};\r\nexport const LogOut = {\r\n  fetchPost(data) {\r\n    let fetchData = {\r\n      method: \"POST\",\r\n      headers: setAuthorizationToken(data)\r\n    };\r\n    return _request(\"/sign-out\", fetchData);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { User } from \"./user\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as userActions from \"../actions/userActions\";\r\nimport Modal from \"./Modal\";\r\nimport Logout from \"./logout\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { Login } from \"../utilities/apiUser\";\r\nimport { LogOut } from \"../utilities/apiUser\";\r\n\r\nconst UserContainer = props => {\r\n  async function handleSubmit(event, form) {\r\n    let { from } = props.location.state || { from: { pathname: \"/\" } };\r\n    const data = JSON.stringify({\r\n      email: event.email,\r\n      password: event.password\r\n    });\r\n    try {\r\n      const res = await Login.fetchPost(data);\r\n      await props.actions.login({\r\n        name: res.user.name,\r\n        token: res.token\r\n      });\r\n      return( form.reset(), props.history.push(from));\r\n    } catch (err) {\r\n      return {\r\n        [FORM_ERROR]: \"Wrong Name or Password!\"\r\n      };\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.history.replace({ pathname: \"/\" });\r\n  };\r\n  const handleLogout = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await LogOut.fetchPost(props.user.token);\r\n      await props.actions.logout();\r\n      return props.history.replace({ pathname: \"/\" });\r\n    } catch (err) {\r\n      return handleError(err);\r\n    }\r\n  };\r\n  let ERRORS = {};\r\n  const handleError =(err)=>{\r\n   if(err) {\r\n    return ERRORS ={error: err} \r\n  } \r\n  }\r\n  return (\r\n    <Modal>\r\n      {props.user.isLogged === false ? (\r\n        <User handleSubmit={handleSubmit} handleClose={handleClose} />\r\n      ) : (\r\n        <Logout handleClose={handleClose} handleLogout={handleLogout} \r\n        ERRORS= {ERRORS}/>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.user\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(userActions, dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserContainer);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport css from \"./NotFound.module.css\";\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div className={css.styles}>\r\n    <h1>Error 404</h1>\r\n    <div>\r\n      Sorry, page{\" \"}\r\n      <p>\r\n        <strong>{location.pathname}</strong>\r\n      </p>{\" \"}\r\n      was not found!\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withRouter(NotFound);\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport CSS from \"./S_Page.module.css\";\r\n\r\nconst Page = props => {\r\n  const newDate = () => {\r\n    const { createdAt } = props.data;\r\n    if (createdAt) {\r\n      let newDate = createdAt.slice(0, 10) + \" \" + createdAt.slice(11, 16);\r\n      return newDate;\r\n    }\r\n  };\r\n\r\n  if (props.data === null) {\r\n    return <div>Unfortunately there are no post!</div>;\r\n  } else {\r\n    const { name, title, description } = props.data;\r\n    return (\r\n      <table>\r\n        <tbody>\r\n          <tr className={CSS.post}>\r\n            <td className={CSS.author}>\r\n              Author:\r\n              <br />\r\n              <b> {name}</b>\r\n              <br />\r\n              {newDate()}\r\n            </td>\r\n            <td className={CSS.post_text}>\r\n              <b>Theme:</b>\r\n              <p>{title}</p>\r\n              <b>Description:</b> <p>{description}</p>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n};\r\nPage.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport CSS from \"./Comment.module.css\";\r\n\r\nconst Comment = props => {\r\n  const { name, email, description, createdAt } = props.data;\r\n  const newDate = () => {\r\n    if (createdAt) {\r\n      let newDate = createdAt.slice(0, 10) + \" \" + createdAt.slice(11, 16);\r\n      return newDate;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={CSS.article}>\r\n      <div className={CSS.author}>\r\n        <h6>\r\n          Author: <b>{name}</b>\r\n          <br />\r\n          Date: <b>{newDate()}</b>\r\n          <br />\r\n          e-mail: {email}\r\n        </h6>\r\n      </div>\r\n      <div>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nComment.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport CSS from \"./TextareaR.module.css\";\r\n\r\nexport const Textarea = ({ input, label, meta }) => (\r\n  <div className={CSS.Input}>\r\n    <label>{label}</label>\r\n    <textarea {...input} type=\"text\" placeholder={input.name} />\r\n    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Input } from \"../Input/InputR\";\r\nimport { Textarea } from \"../Textarea/TextareaR\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport * as V from \"../utilities/FieldLevelValidationForm\";\r\nimport CSS from './Comment.module.css'\r\n\r\nconst AddCommentForm = props => {\r\n  return (\r\n    <Form\r\n      onSubmit={props.onSubmit}\r\n      render={({\r\n        handleSubmit,\r\n        reset,\r\n        submitting,\r\n        pristine,\r\n        submitError,\r\n        submitSucceeded\r\n      }) => (\r\n        <form className= {CSS.form} \r\n        onSubmit={handleSubmit}>\r\n\r\n          <Field\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            validate={V.composeValidations(V.required, V.email)}\r\n          >\r\n            {Input}\r\n          </Field>\r\n          <Field name=\"body\" label=\"Post\" validate={V.required}>\r\n            {Textarea}\r\n          </Field>\r\n          <div>\r\n            <button type=\"submit\" disabled={submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={reset}\r\n              disabled={submitting || pristine}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n          {submitError && <div>{submitError}</div>}\r\n          {submitSucceeded && (\r\n            <div>\r\n              <span>Your comment has been sent!</span>\r\n            </div>\r\n          )}\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default AddCommentForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddCommentForm from \"./AddCommentForm\";\r\nimport * as Api from \"../utilities/Api\";\r\nimport { FORM_ERROR } from \"final-form\";\r\n\r\nconst AddCommentContainer = props => {\r\n  const { id, name, token } = props;\r\n  async function submitComment(value, form) {\r\n    const data = JSON.stringify({\r\n      postId: id,\r\n      name: name,\r\n      email: value.email,\r\n      description: value.body\r\n    });\r\n    try {\r\n      await Api.AddComments.fetchComment(data, token);\r\n      return form.reset();\r\n    } catch (errors) {\r\n      return {\r\n        [FORM_ERROR]: errors\r\n      };\r\n    }\r\n  }\r\n  return <AddCommentForm onSubmit={submitComment} />;\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.user.token,\r\n    name: state.user.name\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AddCommentContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPostComments } from \"../actions/singlePageActions\";\r\nimport Page from \"./S_Page\";\r\nimport Comment from \"./Comment\";\r\nimport AddCommentContainer from \"../AddComment/AddCommentContainer\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport AppLoader from \"../AppLoader/AppLoader\";\r\nimport { lifecycle, compose } from \"recompose\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CSS from \"./SinglePageCon.module.css\";\r\n\r\n\r\nconst SinglePagePost = props => {\r\n  const renderComments = () => {\r\n    const { comments, isFetching, errors } = props.dataById;\r\n    if (errors) {\r\n      return <p className=\"error\">An error occurred while loading!</p>;\r\n    }\r\n    if (isFetching) {\r\n      return <AppLoader />;\r\n    }\r\n    let newsTemplate = null;\r\n    if (comments.length) {\r\n      newsTemplate = comments.map(function(item) {\r\n        return <Comment key={item._id} data={item} />;\r\n      });\r\n    } else {\r\n      newsTemplate = <p>Unfortunately there are no post!</p>;\r\n    }\r\n    return newsTemplate;\r\n  };\r\n\r\n  const { post, errors } = props.dataById;\r\n  const { isLogged } = props;\r\n  const { id } = props.match.params;\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      {!errors ? (\r\n        <div className={CSS.container}>\r\n          <h2>Post</h2>\r\n          <hr />\r\n          <Page data={post} />\r\n          <h3>Comments:</h3>\r\n          <hr />\r\n          <div className={CSS.comments}>{renderComments()}</div>\r\n          <p>\r\n            <b>Your comment:</b>{\" \"}\r\n          </p>\r\n          {isLogged === true ? (\r\n            <AddCommentContainer id={id} />\r\n          ) : (\r\n            <p>Please log in for post your comment!!!</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <NotFound />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataById: state.postById,\r\n    isLogged: state.user.isLogged\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n \r\n  return {\r\n    getPostById: index => {\r\n      dispatch(getPostComments(index));\r\n    }\r\n  };\r\n};\r\nconst enhance = lifecycle({\r\n  async componentDidMount() {\r\n    await this.props.getPostById(this.props.match.params.id);\r\n  }\r\n});\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withRouter,\r\n  enhance\r\n)(SinglePagePost);\r\n","import React from \"react\";\r\nimport { Input } from \"../Input/InputR\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport * as V from \"../utilities/FieldLevelValidationForm\";\r\nimport s from \"./User.module.css\";\r\n\r\nconst AddUserForm = props => {\r\n  return (\r\n    <div className={s.modal}>\r\n      <button className={s.close} onClick={props.handleClose}>\r\n        X\r\n      </button>\r\n      <p>Please enter your details!</p>\r\n      <Form\r\n        onSubmit={props.handleSubmit}\r\n        render={({\r\n          handleSubmit,\r\n          reset,\r\n          submitting,\r\n          pristine,\r\n          submitError,\r\n          submitSucceeded\r\n        }) => (\r\n          <form className={s.form} onSubmit={handleSubmit}>\r\n            <Field\r\n              name=\"login\"\r\n              label=\"Name\"\r\n              validate={V.composeValidations(V.required, V.minLength2)}\r\n            >\r\n              {Input}\r\n            </Field>\r\n            <Field\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              validate={V.composeValidations(V.required, V.minLength6)}\r\n            >\r\n              {Input}\r\n            </Field>\r\n            <Field\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              validate={V.composeValidations(V.email, V.required)}\r\n            >\r\n              {Input}\r\n            </Field>\r\n            <div>\r\n              <button type=\"submit\" disabled={submitting}>\r\n                Submit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={reset}\r\n                disabled={submitting || pristine}\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n            {submitError && <div>{submitError}</div>}\r\n            {submitSucceeded && (\r\n              <div>\r\n                <span>Registration has been successful!</span>\r\n              </div>\r\n            )}\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default AddUserForm;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { login } from \"../actions/userActions\";\r\nimport AddUserForm from \"./RegistrationForm\";\r\nimport Modal from \"./Modal\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { AddUser } from \"../utilities/apiUser\";\r\n\r\nconst AddUserContainer = props => {\r\n  async function submitRegistration(value, form) {\r\n    let { from } = props.location.state || { from: { pathname: \"/\" } };\r\n    try {\r\n      const data = JSON.stringify({\r\n        name: value.login,\r\n        email: value.email,\r\n        password: value.password\r\n      });\r\n      const res = await AddUser.fetchPost(data);\r\n      await props.Login({\r\n        name: res.user.name,\r\n        token: res.token\r\n      });\r\n      return (form.reset(), props.history.push(from));\r\n    } catch (err) {\r\n      return {\r\n        [FORM_ERROR]: \"User already exist!\"\r\n      };\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.history.replace({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <AddUserForm\r\n        handleSubmit={submitRegistration}\r\n        handleClose={handleClose}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.user\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    Login: input => {\r\n      dispatch(login(input));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddUserContainer);\r\n","import React from \"react\";\r\nimport { Input } from \"../Input/InputR\";\r\nimport { Textarea } from \"../Textarea/TextareaR\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport * as V from \"../utilities/FieldLevelValidationForm\";\r\nimport * as css from \"./post.module.css\";\r\n\r\n\r\nconst AddPostForm = props => {\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={props.onSubmit}\r\n      initialValues={props.initialValues}\r\n      render={({\r\n        handleSubmit,\r\n        values,\r\n        reset,\r\n        submitting,\r\n        pristine,\r\n        submitError,\r\n        submitSucceeded\r\n      }) => (\r\n        <form className={css.form} onSubmit={handleSubmit}>\r\n          <Field\r\n            name=\"title\"\r\n            label=\"Theme\"\r\n            validate={V.composeValidations(\r\n              V.required,\r\n              V.maxLength200,\r\n              V.minLength20\r\n            )}\r\n          >\r\n            {Input}\r\n          </Field>\r\n          <Field name=\"description\" label=\"Post\" validate={V.required}>\r\n            {Textarea}\r\n          </Field>\r\n          <div>\r\n            <button type=\"submit\" disabled={submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={reset}\r\n              disabled={submitting || pristine}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n          {submitError && <div>{submitError}</div>}\r\n          {submitSucceeded && (\r\n            <div>\r\n              <span>Your post has been sent!</span>\r\n            </div>\r\n          )}\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default AddPostForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport * as Api from \"../utilities/Api\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport * as css from \"./post.module.css\";\r\n\r\nconst AddPostPage = props => {\r\n  const { name, token } = props;\r\n\r\n  async function submitForm(value, form) {\r\n    const data = JSON.stringify({\r\n      name: name,\r\n      title: value.title,\r\n      description: value.description\r\n    });\r\n    try {\r\n      await Api.AddPost.fetchPost(data, token);\r\n      return form.reset();\r\n    } catch (errors) {\r\n      return {\r\n        [FORM_ERROR]: errors\r\n      };\r\n    }\r\n  }\r\n  return (\r\n    <div className={css.container}>\r\n      <h4>Write your own post...</h4>\r\n      <AddPostForm onSubmit={submitForm} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.user.token,\r\n    name: state.user.name\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AddPostPage);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RemoveUserPost } from \"../utilities/Api\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserPost = props => {\r\n  const { id, title, receivedAt } = props.data;\r\n\r\n  const handleRemove = async () => {\r\n    return await RemoveUserPost.fetchPost(id);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <Link to={`/${id}`}>{title}</Link>\r\n      </td>\r\n      <td>{receivedAt}</td>\r\n      <td>\r\n        <NavLink to={`/myroom/uppost/${id}`}>Update</NavLink>\r\n      </td>\r\n      <td>\r\n        <NavLink to=\"/myroom/post\" onClick={handleRemove}>\r\n          Remove\r\n        </NavLink>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nUserPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    receivedAt: PropTypes.string.isRequired\r\n  })\r\n};\r\nexport default UserPost;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fetchIsNeed } from \"../actions/userPotsActions\";\r\nimport AppLoader from \"../AppLoader/AppLoader\";\r\nimport UserPost from \"./userPost\";\r\nimport * as style from \"./MyRoom.module.css\";\r\n\r\nclass MyRoomPosts extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.RenderPosts = this.RenderPosts.bind(this);\r\n   \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserPosts(this.props.token);\r\n  }\r\n\r\n  RenderPosts = () => {\r\n    const { userPosts } = this.props.userPosts;\r\n    let newsTemplate = null;\r\n    if (userPosts.length) {\r\n      newsTemplate = userPosts.map(function(item) {\r\n        return <UserPost key={item.id} data={item}  />;\r\n      });\r\n    } else {\r\n      newsTemplate = (\r\n        <tr>\r\n          <td>Unfortunately there are no posts ...</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return newsTemplate;\r\n  };\r\n  render() {\r\n    const { isFetching, errors } = this.props.userPosts;\r\n\r\n    return (\r\n      <div className={style.container}>\r\n        {errors && <p>An error occurred while loading!</p>}\r\n        {isFetching === true && <AppLoader />}\r\n        <table className={style.my_table}>\r\n          <thead className={style.my_head}>\r\n            <tr>\r\n              <th>Post</th>\r\n              <th>Date</th>\r\n              <th>{\"\"}</th>\r\n              <th>{\"\"}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.RenderPosts()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nMyRoomPosts.propTypes = {\r\n  userPosts: PropTypes.shape({\r\n    userPosts: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    errors: PropTypes.string,\r\n  }),\r\n  token: PropTypes.string.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userPosts: state.userPosts,\r\n    token: state.user.token\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUserPosts: token => {\r\n      dispatch(fetchIsNeed(token))}\r\n     }\r\n    }\r\n  \r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyRoomPosts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RemoveUserComment} from '../utilities/Api';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst UserComment = props => {\r\n  const { _id, description, createdAt } = props.data;\r\n  const newDate = () => {\r\n    if (createdAt) {\r\n      let newDate = createdAt.slice(0, 10);\r\n      return newDate;\r\n    }\r\n  };\r\n  const handleRemove = async () => {\r\n  return await RemoveUserComment.fetchPost(_id);\r\n  }\r\n  return (\r\n    <tr>\r\n      <td>{description}</td>\r\n      <td>{newDate()}</td>\r\n      <td>\r\n        <NavLink to={`/myroom/upcomment/${_id}`}>Update</NavLink>\r\n      </td>\r\n      <td>\r\n        <NavLink to=\"/myroom/comments\" onClick={handleRemove}>\r\n          Remove\r\n        </NavLink>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nUserComment.propTypes={\r\n  data: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    createdAt: PropTypes.string.isRequired    \r\n  })\r\n}\r\nexport default UserComment;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fetchIsNeed } from \"../actions/userCommentsActions\";\r\nimport AppLoader from \"../AppLoader/AppLoader\";\r\nimport UserComment from \"./userComment\";\r\nimport * as style from \"./MyRoom.module.css\";\r\n\r\nclass MyRoomComments extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.RenderPosts = this.RenderPosts.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getUserComments(this.props.token);\r\n  }\r\n  RenderPosts = () => {\r\n    const { userComments } = this.props.userComments;\r\n    let newsTemplate = null;\r\n    if (userComments.length) {\r\n      newsTemplate = userComments.map(function(item) {\r\n        return <UserComment key={item._id} data={item} />;\r\n      });\r\n    } else {\r\n      newsTemplate = (\r\n        <tr>\r\n          <td>Unfortunately there are no posts ...</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return newsTemplate;\r\n  };\r\n  render() {\r\n    const { errors, isFetching } = this.props.userComments;\r\n    return (\r\n      <div className={style.container}>\r\n        {errors && <p>An error occurred while loading!</p>}\r\n        {isFetching === true && <AppLoader />}\r\n        <table className={style.my_table}>\r\n          <thead className={style.my_head}>\r\n            <tr>\r\n              <th>Comment</th>\r\n              <th>Date</th>\r\n              <th>{\"\"}</th>\r\n              <th>{\"\"}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.RenderPosts()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nMyRoomComments.propTypes = {\r\n  userComments: PropTypes.shape({\r\n    userComments: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n  }),\r\n  token: PropTypes.string.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userComments: state.userComments,\r\n    token: state.user.token\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUserComments: token => {\r\n      dispatch(fetchIsNeed(token));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyRoomComments);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddPostForm from \"../AddPost/AddPostForm\";\r\nimport * as Api from \"../utilities/Api\";\r\nimport { FORM_ERROR } from \"final-form\";\r\n\r\nclass UpdatePost extends React.Component {\r\n  state = { initialValues: {} };\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const post = this.props.userPosts.find(element => {\r\n      return element.id === id;\r\n    });\r\n    this.setState({\r\n      initialValues: { title: post.title, description: post.body }\r\n    });\r\n  }\r\n\r\n  submitForm = async value => {\r\n    const { id } = this.props.match.params;\r\n    const data = JSON.stringify({\r\n      title: value.title,\r\n      description: value.description\r\n    });\r\n    try {\r\n      await Api.UpdatePost.fetchPost(id, data);\r\n      return this.props.history.push(\"/myroom/posts\");\r\n    } catch (errors) {\r\n      return {\r\n        [FORM_ERROR]: \"Error occurred during update\"\r\n      };\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <AddPostForm\r\n        onSubmit={this.submitForm.bind(this)}\r\n        initialValues={this.state.initialValues}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userPosts: state.userPosts.userPosts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UpdatePost);\r\n","import React from \"react\";\r\nimport { Textarea } from \"../Textarea/TextareaR\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport * as V from \"../utilities/FieldLevelValidationForm\";\r\nimport CSS from '../AddComment/Comment.module.css'\r\n\r\nconst UpdateCommentForm = props => {\r\n  return (\r\n    <Form\r\n      onSubmit={props.onSubmit}\r\n      initialValues={props.initialValues}\r\n      render={({\r\n        handleSubmit,\r\n        values,\r\n        reset,\r\n        submitting,\r\n        pristine,\r\n        submitError,\r\n        submitSucceeded\r\n      }) => (\r\n        <form className= {CSS.form} \r\n        onSubmit={handleSubmit}>\r\n          <Field name=\"description\" label=\"Post\" validate={V.required}>\r\n            {Textarea}\r\n          </Field>\r\n          <div>\r\n            <button type=\"submit\" disabled={submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={reset}\r\n              disabled={submitting || pristine}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n          {submitError && <div>{submitError}</div>}\r\n          {submitSucceeded && (\r\n            <div>\r\n              <span>Your comment has been sent!</span>\r\n            </div>\r\n          )}\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default UpdateCommentForm;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UpdateCommentForm from \"./UpdateCommentForm\";\r\nimport * as Api from \"../utilities/Api\";\r\nimport { FORM_ERROR } from \"final-form\";\r\n\r\nclass UpdateComment extends React.Component {\r\n  state = { initialValues: {} };\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const comment = this.props.userComments.find(element => {\r\n      return element._id === id;\r\n    });\r\n    this.setState({\r\n      initialValues: { description: comment.description }\r\n    });\r\n  }\r\n\r\n  submitForm = async value => {\r\n    const { id } = this.props.match.params;\r\n    const data = JSON.stringify({\r\n      description: value.description\r\n    });\r\n    try {\r\n      await Api.UpdateComment.fetchPost(id, data);\r\n      return this.props.history.push(\"/myroom/comments\");\r\n    } catch (errors) {\r\n      return {\r\n        [FORM_ERROR]: \"Error occurred during update\" \r\n      };\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <UpdateCommentForm\r\n        onSubmit={this.submitForm.bind(this)}\r\n        initialValues={this.state.initialValues}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userComments: state.userComments.userComments\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UpdateComment);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport AddPostContainer from \"../AddPost/AddPostContainer\";\r\nimport MyRoomPosts from \"./MyRoomPosts\";\r\nimport MyRoomComments from \"./MyRoomComments\";\r\nimport UpdatePost from \"../UpdatePost/updatePost\";\r\nimport UpdateComment from \"../UpdateComment/updateComment\";\r\n\r\nconst MyRoomRoutes = () => (\r\n  <Switch>\r\n    <Redirect exact from={\"/myroom\"} to={\"/myroom/posts\"} />\r\n    <Route exact path=\"/myroom/posts\" component={MyRoomPosts} />\r\n    <Route path=\"/myroom/comments\" component={MyRoomComments} />\r\n    <Route path=\"/myroom/addpost\" component={AddPostContainer} />\r\n    <Route path=\"/myroom/uppost/:id\" component={UpdatePost} />\r\n    <Route path=\"/myroom/upcomment/:id\" component={UpdateComment} />\r\n  </Switch>\r\n);\r\nexport default MyRoomRoutes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as style from \"./sideBar.module.css\";\r\n\r\nconst SideBar = props => {\r\n  return (\r\n    <div className={style.sidenav}>\r\n      <Link className={style.sidelink} to=\"/myroom/posts\">\r\n        My posts\r\n      </Link>\r\n\r\n      <Link className={style.sidelink} to=\"/myroom/comments\">\r\n        My comments{\" \"}\r\n      </Link>\r\n\r\n      <Link className={style.sidelink} to=\"/myroom/addpost\">\r\n        New Post\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport MyRoomRoutes from \"./MyRoomRoutes\";\r\nimport SideBar from \"../Sidebar/sideBar\";\r\n\r\nclass MyRoom extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <SideBar />\r\n        <MyRoomRoutes />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyRoom;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Redirect} from 'react-router';\r\n\r\nexport default function requireAuthentication(Component) {\r\n  class AuthenticatedComponent extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          {this.props.user.isLogged === true ? (\r\n            <Component {...this.props} />\r\n          ) : <Redirect to = {{\r\n              pathname: \"/login\",\r\n              state: { from: this.props.location }\r\n            }}/>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      user: state.user\r\n    };\r\n  }\r\n\r\n  return connect(mapStateToProps)(AuthenticatedComponent);\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport DashboardContainer from \"../Dashboard/DashboardContainer\";\r\nimport SearchContainer from '../Search/searchPage'\r\nimport UserContainer from \"../User/UserContainer\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport SinglePagePost from \"../SinglePage/SinglePageCon\";\r\nimport AddUserContainer from '../User/RegistrationContainer';\r\nimport MyRoom from \"../MyRoom/MyRoom\";\r\nimport requireAuthentication from \"../containers/AuthenticatedComponent/index\";\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={DashboardContainer} />\r\n    <Route path=\"/login\" component={UserContainer} />\r\n    <Route \r\n      path=\"/myroom\"\r\n      component={requireAuthentication(MyRoom)}\r\n    />\r\n    \r\n    <Route exact path=\"/registration\" component={AddUserContainer} />\r\n    <Route exact path=\"/:id\" component={SinglePagePost} />\r\n    <Route exact path=\"/search/:search\" component={SearchContainer} />\r\n    <Route path='*' component={NotFound} />\r\n  </Switch>\r\n);\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nconst NavBar = props => {\r\n  const { isLogged, name } = props;\r\n  return (\r\n    <nav className={styles.header}>\r\n      <ul className={styles.list}>\r\n        <li className={styles.list__item}>\r\n          <h4>\r\n            Hello {name}\r\n            {\"  \"}{\" \"}\r\n          </h4>\r\n        </li>\r\n        <li className={styles.list__item}>\r\n          <NavLink to=\"/\">\r\n            <span>Notices</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.list__item}>\r\n          <NavLink to=\"/myroom\">\r\n            <span>My room</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.list__item}>\r\n          <NavLink to=\"/login\">\r\n            <span>{isLogged === false ? \"Log In\" : \"Log Out\"} </span>\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.list__item}>\r\n          <NavLink to=\"/registration\">\r\n            <span>Sign up </span>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLogged: state.user.isLogged,\r\n    name: state.user.name\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { Component } from \"react\";\nimport \"../cssComponents/App.css\";\nimport Routes from \"../route/routes\";\nimport NavBar from '../NavBar/Nav'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar/>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./cssComponents/index.css\";\nimport App from \"./containers/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst { store, persistor } = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading=\"null\" persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}